#!/usr/bin/env python 
# -*- coding:utf-8 -*-
"""
Copyright (c) 2018 Baidu.com, Inc. All Rights Reserved
__title__ = ''
__author__ = 'tianxiaoyuan'
__mtime__ = '20/5/23'

"""

GRAPH_DATA = {
    "clear": "graph.truncateBackend()",
    "clabel": "g.V().groupCount().by('c_label')",
    "id_clabel": "g.V('1:marko').values('c_label')",

    "betweeness": "graph.schema().propertyKey('name').asText().ifNotExist().create();"
             "graph.schema().propertyKey('age').asInt().ifNotExist().create();"
             "graph.schema().propertyKey('city').asText().ifNotExist().create();"
             "graph.schema().propertyKey('lang').asText().ifNotExist().create();"
             "graph.schema().propertyKey('date').asText().ifNotExist().create();"
             "graph.schema().propertyKey('price').asInt().ifNotExist().create();"
  
             "person = graph.schema().vertexLabel('person').properties('name', 'age', 'city')"
             ".primaryKeys('name').ifNotExist().create();"
             "software = graph.schema().vertexLabel('software').properties('name', 'lang', 'price')"
             ".primaryKeys('name').ifNotExist().create();"
             
             "knows = graph.schema().edgeLabel('knows').sourceLabel('person').targetLabel('person')"
             ".properties('date').ifNotExist().create();"
             "created = graph.schema().edgeLabel('created').sourceLabel('person').targetLabel('software')"
             ".properties('date', 'city').ifNotExist().create();"
             "help = graph.schema().edgeLabel('help').sourceLabel('software').targetLabel('person')"
             ".properties('date', 'city').ifNotExist().create();"

             "marko = graph.addVertex(T.label, 'person', 'name', 'marko', 'age', 29, 'city', 'Beijing');"
             "vadas = graph.addVertex(T.label, 'person', 'name', 'vadas', 'age', 27, 'city', 'Hongkong');"
             "lop = graph.addVertex(T.label, 'software', 'name', 'lop', 'lang', 'java', 'price', 328);"
             "josh = graph.addVertex(T.label, 'person', 'name', 'josh', 'age', 32, 'city', 'Beijing');"
             "ripple = graph.addVertex(T.label, 'software', 'name', 'ripple', 'lang', 'java', 'price', 199);"
             "peter = graph.addVertex(T.label, 'person','name', 'peter', 'age', 29, 'city', 'Shanghai');"
             
             "marko.addEdge('knows', vadas, 'date', '20160110');"
             "vadas.addEdge('created', lop, 'date', '20160110', 'city', 'Shanghai');"
             "vadas.addEdge('created', ripple, 'date', '20160110', 'city', 'Beijing');"
             "lop.addEdge('help', peter, 'date', '20160110', 'city', 'Beijing');"
             "ripple.addEdge('help', peter, 'date', '20160110', 'city', 'Shenzhen');"
             "peter.addEdge('knows', josh, 'date', '20160110')",



    "centrality": "graph.schema().propertyKey('name').asText().ifNotExist().create();"
                  "graph.schema().propertyKey('age').asInt().ifNotExist().create();"
                  "graph.schema().propertyKey('city').asText().ifNotExist().create();"
                  "graph.schema().propertyKey('lang').asText().ifNotExist().create();"
                  "graph.schema().propertyKey('date').asText().ifNotExist().create();"
                  "graph.schema().propertyKey('price').asInt().ifNotExist().create();"
                  
                  "person = graph.schema().vertexLabel('person').properties('name', 'age', 'city')"
                  ".primaryKeys('name').ifNotExist().create();"
                  "software = graph.schema().vertexLabel('software').properties('name', 'lang', 'price')"
                  ".primaryKeys('name').ifNotExist().create();"
                  
                  "knows = graph.schema().edgeLabel('knows').sourceLabel('person').targetLabel('person')"
                  ".properties('date').ifNotExist().create();"
                  "created = graph.schema().edgeLabel('created').sourceLabel('person').targetLabel('software')"
                  ".properties('date', 'city').ifNotExist().create();"               
                  "help = graph.schema().edgeLabel('help').sourceLabel('software').targetLabel('person')"
                  ".properties('date', 'city').ifNotExist().create();"
                  "relation = graph.schema().edgeLabel('relation').sourceLabel('software').targetLabel('software')"
                  ".properties('date', 'city').ifNotExist().create();"
                  
                  "marko = graph.addVertex(T.label, 'person', 'name', 'marko', 'age', 29, 'city', 'Beijing');"
                  "vadas = graph.addVertex(T.label, 'person', 'name', 'vadas', 'age', 27, 'city', 'Hongkong');"
                  "lop = graph.addVertex(T.label, 'software', 'name', 'lop', 'lang', 'java', 'price', 328);"
                  "josh = graph.addVertex(T.label, 'person', 'name', 'josh', 'age', 32, 'city', 'Beijing');"
                  "ripple = graph.addVertex(T.label, 'software', 'name', 'ripple', 'lang', 'java', 'price', 199);"
                  "peter = graph.addVertex(T.label, 'person','name', 'peter', 'age', 29, 'city', 'Shanghai');"
                  
                  "marko.addEdge('knows', vadas, 'date', '20160110');"
                  "marko.addEdge('created', ripple, 'date', '20160110', 'city', 'Shanghai');"
                  "lop.addEdge('relation', ripple, 'date', '20160110', 'city', 'Beijing');"
                  "peter.addEdge('created', ripple, 'date', '20160110', 'city', 'Shenzhen');"
                  "peter.addEdge('knows', josh, 'date', '20160110');"
                  "marko.addEdge('knows', peter, 'date', '20160110')",

    "basic": "graph.schema().propertyKey('name').asText().ifNotExist().create();"
             "graph.schema().propertyKey('age').asInt().ifNotExist().create();"
             "graph.schema().propertyKey('city').asText().ifNotExist().create();"
             "graph.schema().propertyKey('lang').asText().ifNotExist().create();"
             "graph.schema().propertyKey('date').asText().ifNotExist().create();"
             "graph.schema().propertyKey('price').asInt().ifNotExist().create();"
             
             "person = graph.schema().vertexLabel('person').properties('name', 'age', 'city')"
             ".primaryKeys('name').ifNotExist().create();"
             "software = graph.schema().vertexLabel('software').properties('name', 'lang', 'price')"
             ".primaryKeys('name').ifNotExist().create();"
             
             "knows = graph.schema().edgeLabel('knows').sourceLabel('person').targetLabel('person')"
             ".properties('date').ifNotExist().create();"
             "created = graph.schema().edgeLabel('created').sourceLabel('person').targetLabel('software')"
             ".properties('date', 'city').ifNotExist().create();"
             
             "age_index = graph.schema().indexLabel('personByAge').onV('person').by('age').range()"
             ".ifNotExist().create();"
             "date_index = graph.schema().indexLabel('knowsByDate').onE('knows').by('date').secondary()"
             ".ifNotExist().create();"
             
             "marko = graph.addVertex(T.label, 'person', 'name', 'marko', 'age', 29, 'city', 'Beijing');"
             "vadas = graph.addVertex(T.label, 'person', 'name', 'vadas', 'age', 27, 'city', 'Hongkong');"
             "lop = graph.addVertex(T.label, 'software', 'name', 'lop', 'lang', 'java', 'price', 328);"
             "josh = graph.addVertex(T.label, 'person', 'name', 'josh', 'age', 32, 'city', 'Beijing');"
             "ripple = graph.addVertex(T.label, 'software', 'name', 'ripple', 'lang', 'java', 'price', 199);"
             "peter = graph.addVertex(T.label, 'person','name', 'peter', 'age', 29, 'city', 'Shanghai');"
             "o = graph.addVertex(T.label, 'person', 'name', 'o', 'age', 29, 'city', 'Beijing');"
             "s = graph.addVertex(T.label, 'person', 'name', 's', 'age', 27, 'city', 'Hongkong');"
             "p = graph.addVertex(T.label, 'software', 'name', 'p', 'lang', 'java', 'price', 328);"
             "h = graph.addVertex(T.label, 'person', 'name', 'h', 'age', 32, 'city', 'Beijing');"
             "e = graph.addVertex(T.label, 'software', 'name', 'e', 'lang', 'java', 'price', 199);"
             "r = graph.addVertex(T.label, 'person','name', 'r', 'age', 29, 'city', 'Shanghai');"
             "li = graph.addVertex(T.label, 'person', 'name', 'li', 'age', 29, 'city', 'Beijing');"
             "wang = graph.addVertex(T.label, 'person', 'name', 'wang', 'age', 27, 'city', 'Hongkong');"
             "zhao = graph.addVertex(T.label, 'software', 'name', 'zhao', 'lang', 'java', 'price', 328);"
             "qian = graph.addVertex(T.label, 'person', 'name', 'qian', 'age', 32, 'city', 'Beijing');"
             
             "marko.addEdge('knows', vadas, 'date', '20160110');"
             "marko.addEdge('knows', josh, 'date', '20130220');"
             "marko.addEdge('created', lop, 'date', '20171210', 'city', 'Shanghai');"
             "josh.addEdge('created', ripple, 'date', '20151010', 'city', 'Beijing');"
             "josh.addEdge('created', lop, 'date', '20171210', 'city', 'Beijing');"
             "peter.addEdge('created', lop, 'date', '20171210', 'city', 'Beijing');"   
             "o.addEdge('knows', s, 'date', '20160110');"
             "o.addEdge('knows', h, 'date', '20130220');"
             "o.addEdge('created', p, 'date', '20171210', 'city', 'Shanghai');"
             "h.addEdge('created', e, 'date', '20151010', 'city', 'Beijing');"
             "h.addEdge('created', p, 'date', '20171210', 'city', 'Beijing');"
             "r.addEdge('created', p, 'date', '20171210', 'city', 'Beijing');"
             "li.addEdge('knows', wang, 'date', '20160110')",



    "fusiform_similarity": "graph.schema().propertyKey('name').asText("
                           ").ifNotExist().create();graph.schema().propertyKey("
                           "'age').asInt().ifNotExist().create();graph.schema("
                           ").propertyKey('city').asText().ifNotExist().create("
                           ");graph.schema().propertyKey('lang').asText("
                           ").ifNotExist().create();graph.schema().propertyKey("
                           "'date').asText().ifNotExist().create();graph.schema("
                           ").propertyKey('price').asInt().ifNotExist().create("
                           ");person = graph.schema().vertexLabel("
                           "'person').properties('name', 'age', "
                           "'city').primaryKeys('name').ifNotExist().create("
                           ");software = graph.schema().vertexLabel("
                           "'software').properties('name', 'lang', "
                           "'price').primaryKeys('name').ifNotExist().create("
                           ");knows = graph.schema().edgeLabel("
                           "'knows').sourceLabel('person').targetLabel("
                           "'person').properties('date').ifNotExist().create("
                           ");created = graph.schema().edgeLabel("
                           "'created').sourceLabel('person').targetLabel("
                           "'software').properties('date', 'city').ifNotExist("
                           ").create();help = graph.schema().edgeLabel("
                           "'help').sourceLabel('software').targetLabel("
                           "'person').properties('date', 'city').ifNotExist("
                           ").create();relation = graph.schema().edgeLabel("
                           "'relation').sourceLabel('software').targetLabel("
                           "'software').properties('date', 'city').ifNotExist("
                           ").create();marko = graph.addVertex(T.label, 'person', "
                           "'name', 'marko', 'age', 29, 'city', 'Beijing');vadas "
                           "= graph.addVertex(T.label, 'person', 'name', 'vadas', "
                           "'age', 27, 'city', 'Hongkong');lop = graph.addVertex("
                           "T.label, 'software', 'name', 'lop', 'lang', 'java', "
                           "'price', 328);josh = graph.addVertex(T.label, "
                           "'person', 'name', 'josh', 'age', 32, 'city', "
                           "'Beijing');ripple = graph.addVertex(T.label, "
                           "'software', 'name', 'ripple', 'lang', 'java', "
                           "'price', 199);peter = graph.addVertex(T.label, "
                           "'person','name', 'peter', 'age', 29, 'city', "
                           "'Shanghai');lily = graph.addVertex(T.label, 'person',"
                           "'name', 'lily', 'age', 29, 'city', "
                           "'Shanghai');vadas.addEdge('knows', marko, 'date', "
                           "'20160110');lop.addEdge('help', marko, 'date', "
                           "'20160110', 'city', 'Shanghai');josh.addEdge('knows', "
                           "marko, 'date', '20160110');ripple.addEdge('help', "
                           "marko, 'date', '20160110', 'city', "
                           "'Beijing');peter.addEdge('knows', marko, 'date', "
                           "'20160110');vadas.addEdge('knows', lily, 'date', "
                           "'20160110');lop.addEdge('help', lily, 'date', "
                           "'20160110', 'city', 'Shanghai');josh.addEdge('knows', "
                           "lily, 'date', '20160110');ripple.addEdge('help', "
                           "lily, 'date', '20160110', 'city', "
                           "'Beijing');peter.addEdge('knows', lily, 'date', "
                           "'20160110')",

    "kcore": "graph.schema().propertyKey('name').asText().ifNotExist().create("
             ");graph.schema().propertyKey('age').asInt().ifNotExist().create("
             ");graph.schema().propertyKey('city').asText().ifNotExist().create("
             ");graph.schema().propertyKey('lang').asText().ifNotExist().create("
             ");graph.schema().propertyKey('date').asText().ifNotExist().create("
             ");graph.schema().propertyKey('price').asInt().ifNotExist().create("
             ");person = graph.schema().vertexLabel('person').properties('name', "
             "'age', 'city').primaryKeys('name').ifNotExist().create();software = "
             "graph.schema().vertexLabel('software').properties('name', 'lang', "
             "'price').primaryKeys('name').ifNotExist().create();knows = "
             "graph.schema().edgeLabel('knows').sourceLabel('person').targetLabel("
             "'person').properties('date').ifNotExist().create();created = "
             "graph.schema().edgeLabel('created').sourceLabel("
             "'person').targetLabel('software').properties('date', "
             "'city').ifNotExist().create();help = graph.schema().edgeLabel("
             "'help').sourceLabel('software').targetLabel('person').properties("
             "'date', 'city').ifNotExist().create();relation = graph.schema("
             ").edgeLabel('relation').sourceLabel('software').targetLabel("
             "'software').properties('date', 'city').ifNotExist().create();marko "
             "= graph.addVertex(T.label, 'person', 'name', 'marko', 'age', 29, "
             "'city', 'Beijing');vadas = graph.addVertex(T.label, 'person', "
             "'name', 'vadas', 'age', 27, 'city', 'Hongkong');lop = "
             "graph.addVertex(T.label, 'software', 'name', 'lop', 'lang', 'java', "
             "'price', 328);josh = graph.addVertex(T.label, 'person', 'name', "
             "'josh', 'age', 32, 'city', 'Beijing');ripple = graph.addVertex("
             "T.label, 'software', 'name', 'ripple', 'lang', 'java', 'price', "
             "199);marko.addEdge('knows', vadas, 'date', "
             "'20160110');marko.addEdge('created', ripple, 'date', '20160110', "
             "'city', 'Shenzhen');lop.addEdge('help', vadas, 'date', '20160110', "
             "'city', 'Shenzhen');lop.addEdge('help', josh, 'date', '20160110', "
             "'city', 'Shenzhen');josh.addEdge('created', ripple, 'date', "
             "'20160110', 'city', 'Shenzhen');lop.addEdge('help', marko, 'date', "
             "'20160110', 'city', 'Shenzhen');josh.addEdge('knows', marko, "
             "'date', '20160110');josh.addEdge('knows', marko, 'date', "
             "'20160110');ripple.addEdge('help', marko, 'date', '20160110', "
             "'city', 'Shenzhen');lop.addEdge('relation', ripple, 'date', "
             "'20160110', 'city', 'Shenzhen')",

    "kings2": "graph.schema().propertyKey('name').asText().ifNotExist().create();"
              "graph.schema().propertyKey('age').asInt().ifNotExist().create();"
              "graph.schema().propertyKey('city').asText().ifNotExist().create();"
              "graph.schema().propertyKey('lang').asText().ifNotExist().create();"
              "graph.schema().propertyKey('date').asText().ifNotExist().create();"
              "graph.schema().propertyKey('price').asInt().ifNotExist().create();"
              "person = graph.schema().vertexLabel('person').properties('name', 'age', 'city'"
              ").primaryKeys('name').ifNotExist().create();software = graph.schema()"
              ".vertexLabel('software').properties('name', 'lang', 'price').primaryKeys('name').ifNotExist().create();"
              "knows = graph.schema().edgeLabel('knows').sourceLabel("
              "'person').targetLabel('person').properties('date').ifNotExist("
              ").create();created = graph.schema().edgeLabel("
              "'created').sourceLabel('person').targetLabel("
              "'software').properties('date', 'city').ifNotExist().create();help "
              "= graph.schema().edgeLabel('help').sourceLabel("
              "'software').targetLabel('person').properties('date', "
              "'city').ifNotExist().create();relation = graph.schema().edgeLabel("
              "'relation').sourceLabel('software').targetLabel("
              "'software').properties('date', 'city').ifNotExist().create();marko "
              "= graph.addVertex(T.label, 'person', 'name', 'marko', 'age', 29, "
              "'city', 'Beijing');vadas = graph.addVertex(T.label, 'person', "
              "'name', 'vadas', 'age', 27, 'city', 'Hongkong');lop = "
              "graph.addVertex(T.label, 'software', 'name', 'lop', 'lang', "
              "'java', 'price', 328);josh = graph.addVertex(T.label, 'person', "
              "'name', 'josh', 'age', 32, 'city', 'Beijing');ripple = "
              "graph.addVertex(T.label, 'software', 'name', 'ripple', 'lang', "
              "'java', 'price', 199);lily = graph.addVertex(T.label, 'software', "
              "'name', 'lily', 'lang', 'java', 'price', 200);marko.addEdge("
              "'knows', vadas, 'date', '20160110');vadas.addEdge('created', lop, "
              "'date', '20160110', 'city', 'Shenzhen');vadas.addEdge('knows', "
              "josh, 'date', '20160110');lop.addEdge('help', josh, 'date', "
              "'20160110', 'city', 'Shenzhen');lop.addEdge('relation', ripple, "
              "'date', '20160110', 'city', 'Shenzhen');josh.addEdge('created', "
              "ripple, 'date', '20160110', 'city', 'Shenzhen');ripple.addEdge("
              "'relation', lily, 'date', '20160110', 'city', "
              "'Shenzhen');lily.addEdge('help', josh, 'date', '20160110', 'city','Shenzhen')",

    "schema_indexLabel": "graph.schema().propertyKey('name').asText().ifNotExist().create();"
                         "graph.schema().propertyKey('age').asInt().ifNotExist().create();"
                         "graph.schema().propertyKey('city').asText().ifNotExist().create();"
                         "graph.schema().propertyKey('lang').asText().ifNotExist().create();"
                         "graph.schema().propertyKey('date').asText().ifNotExist().create();"
                         "graph.schema().propertyKey('price').asInt().ifNotExist().create();"

                         "person = graph.schema().vertexLabel('person').properties('name', 'age', 'city')"
                         ".primaryKeys('name').ifNotExist().create();"
                         "software = graph.schema().vertexLabel('software').properties('name', 'lang', 'price')"
                         ".primaryKeys('name').ifNotExist().create();"

                         "knows = graph.schema().edgeLabel('knows').sourceLabel('person').targetLabel('person')"
                         ".properties('date').ifNotExist().create();"
                         "created = graph.schema().edgeLabel('created').sourceLabel('person').targetLabel('software')"
                         ".properties('date', 'city').ifNotExist().create();"
                         
                         "age_index = graph.schema().indexLabel('personByAge').onV('person').by('age').range()"
                         ".ifNotExist().create();"
                         "date_index = graph.schema().indexLabel('knowsByDate').onE('knows').by('date').secondary()"
                         ".ifNotExist().create();",

    "list_pro": "graph.schema().propertyKey('name').asText().ifNotExist().create();"
                "graph.schema().propertyKey('age').asInt().ifNotExist().create();"
                "graph.schema().propertyKey('city').asText().valueList().ifNotExist().create();"
                "graph.schema().propertyKey('lang').asText().ifNotExist().create();"
                "graph.schema().propertyKey('date').asDate().ifNotExist().create();"
                "graph.schema().propertyKey('price').asInt().ifNotExist().create();"
                "graph.schema().propertyKey('address').asText().valueList().ifNotExist().create();"


                "person = graph.schema().vertexLabel('person').properties('name', 'age', 'city')"
                ".primaryKeys('name').ifNotExist().create();"
                "software = graph.schema().vertexLabel('software').properties('name', 'lang', 'price')"
                ".primaryKeys('name').ifNotExist().create();"

                "knows = graph.schema().edgeLabel('knows').sourceLabel('person').targetLabel('person')"
                ".properties('date', 'address').ifNotExist().create();"
                "created = graph.schema().edgeLabel('created').sourceLabel('person').targetLabel('software')"
                ".properties('date', 'city').ifNotExist().create();"

                "marko = graph.addVertex(T.label, 'person', 'name', 'marko', 'age', 29, 'city', 'Beijing', 'city', 'Shanghai', 'city', 'Hubei');"
                "vadas = graph.addVertex(T.label, 'person', 'name', 'vadas', 'age', 27, 'city', 'Hongkong', 'city', 'Jiangsu');"
                "lop = graph.addVertex(T.label, 'software', 'name', 'lop', 'lang', 'java', 'price', 328);"
                "josh = graph.addVertex(T.label, 'person', 'name', 'josh', 'age', 32, 'city', 'Beijing', 'city', 'Taiyuan');"
                "ripple = graph.addVertex(T.label, 'software', 'name', 'ripple', 'lang', 'java', 'price', 199);"
                "peter = graph.addVertex(T.label, 'person','name', 'peter', 'age', 29, 'city', 'Shanghai', 'city', 'Shanxi');"
                "o = graph.addVertex(T.label, 'person', 'name', 'o', 'age', 29, 'city', 'Beijing', 'city', 'Yunnan');"
                "s = graph.addVertex(T.label, 'person', 'name', 's', 'age', 27, 'city', 'Hongkong', 'city', 'Henan');"
                "p = graph.addVertex(T.label, 'software', 'name', 'p', 'lang', 'java', 'price', 328);"
                "h = graph.addVertex(T.label, 'person', 'name', 'h', 'age', 32, 'city', 'Guangzhou', 'city', 'Beijing');"
                "e = graph.addVertex(T.label, 'software', 'name', 'e', 'lang', 'java', 'price', 199);"
                "r = graph.addVertex(T.label, 'person','name', 'r', 'age', 29, 'city', 'Shanghai', 'city', 'Xiameng');"
                "li = graph.addVertex(T.label, 'person', 'name', 'li', 'age', 29, 'city', 'Beijing', 'city', 'Taiwan');"
                "wang = graph.addVertex(T.label, 'person', 'name', 'wang', 'age', 27, 'city', 'Hongkong', 'city', 'USA');"
                "zhao = graph.addVertex(T.label, 'software', 'name', 'zhao', 'lang', 'java', 'price', 328);"
                "qian = graph.addVertex(T.label, 'person', 'name', 'qian', 'age', 32, 'city', 'Beijing', 'city', 'Japan');"

                "marko.addEdge('knows', vadas, 'date', '2016-01-10', 'address', '北京市海淀区', 'address', '北京市房山区');"
                "marko.addEdge('knows', josh, 'date', '2013-02-20', 'address', '北京市昌平区', 'address', '北京市开发新区');"
                "marko.addEdge('created', lop, 'date', '2017-12-10', 'city', 'Shanghai', 'city', '英国');"
                "josh.addEdge('created', ripple, 'date', '2015-10-10', 'city', 'Beijing', 'city', '山西');"
                "josh.addEdge('created', lop, 'date', '2017-12-10', 'city', 'Beijing', 'city', '北京');"
                "peter.addEdge('created', lop, 'date', '2017-12-10', 'city', 'Beijing', 'city', '天津');"
                "o.addEdge('knows', s, 'date', '2016-01-10', 'address', '北京市大兴区', 'address', '北京市望京');"
                "o.addEdge('knows', h, 'date', '2013-02-20', 'address', '北京市朝阳区', 'address', '北京市苹果园');"
                "o.addEdge('created', p, 'date', '2017-12-10', 'city', 'Shanghai', 'city', '河北');"
                "h.addEdge('created', e, 'date', '2015-10-10', 'city', 'Beijing', 'city', '河南');"
                "h.addEdge('created', p, 'date', '2017-12-10', 'city', 'Beijing', 'city', '陕西');"
                "r.addEdge('created', p, 'date', '2017-12-10', 'city', 'Beijing', 'city', '内蒙');"
                "li.addEdge('knows', wang, 'date', '2016-01-10', 'address', '北京市海淀区', 'address', '北京市颐和园')",

    "edge_use": "graph.schema().propertyKey('name').asText().ifNotExist().create();"
                "graph.schema().propertyKey('age').asInt().ifNotExist().create();"
                "graph.schema().propertyKey('city').asText().ifNotExist().create();"
                "graph.schema().propertyKey('lang').asText().ifNotExist().create();"
                "graph.schema().propertyKey('date').asText().ifNotExist().create();"
                "graph.schema().propertyKey('price').asInt().ifNotExist().create();"

                "person = graph.schema().vertexLabel('person').properties('name', 'age', 'city')"
                ".primaryKeys('name').ifNotExist().create();"
                "software = graph.schema().vertexLabel('software').properties('name', 'lang', 'price')"
                ".primaryKeys('name').ifNotExist().create();"

                "knows = graph.schema().edgeLabel('knows').sourceLabel('person').targetLabel('person')"
                ".properties('date', 'price').ifNotExist().create();"
                "created = graph.schema().edgeLabel('created').sourceLabel('person').targetLabel('software')"
                ".properties('date', 'city').ifNotExist().create();"

                "marko = graph.addVertex(T.label, 'person', 'name', 'marko', 'age', 29, 'city', 'Beijing');"
                "vadas = graph.addVertex(T.label, 'person', 'name', 'vadas', 'age', 27, 'city', 'Hongkong');"
                "lop = graph.addVertex(T.label, 'software', 'name', 'lop', 'lang', 'java', 'price', 328);"
                "josh = graph.addVertex(T.label, 'person', 'name', 'josh', 'age', 32, 'city', 'Beijing');"
                "ripple = graph.addVertex(T.label, 'software', 'name', 'ripple', 'lang', 'java', 'price', 199);"
                "peter = graph.addVertex(T.label, 'person','name', 'peter', 'age', 29, 'city', 'Shanghai');"
                "o = graph.addVertex(T.label, 'person', 'name', 'o', 'age', 29, 'city', 'Beijing');"
                "s = graph.addVertex(T.label, 'person', 'name', 's', 'age', 27, 'city', 'Hongkong');"
                "p = graph.addVertex(T.label, 'software', 'name', 'p', 'lang', 'java', 'price', 328);"
                "h = graph.addVertex(T.label, 'person', 'name', 'h', 'age', 32, 'city', 'Beijing');"
                "e = graph.addVertex(T.label, 'software', 'name', 'e', 'lang', 'java', 'price', 199);"
                "r = graph.addVertex(T.label, 'person','name', 'r', 'age', 29, 'city', 'Shanghai');"
                "li = graph.addVertex(T.label, 'person', 'name', 'li', 'age', 29, 'city', 'Beijing');"
                "wang = graph.addVertex(T.label, 'person', 'name', 'wang', 'age', 27, 'city', 'Hongkong');"
                "zhao = graph.addVertex(T.label, 'software', 'name', 'zhao', 'lang', 'java', 'price', 328);"
                "qian = graph.addVertex(T.label, 'person', 'name', 'qian', 'age', 32, 'city', 'Beijing');"

                "marko.addEdge('knows', vadas, 'date', '20160110', 'price', 45);"
                "marko.addEdge('knows', josh, 'date', '20130220', 'price', 328);"
                "marko.addEdge('created', lop, 'date', '20171210', 'city', 'Shanghai');"
                "josh.addEdge('created', ripple, 'date', '20151010', 'city', 'Beijing');"
                "josh.addEdge('created', lop, 'date', '20171210', 'city', 'Beijing');"
                "peter.addEdge('created', lop, 'date', '20171210', 'city', 'Beijing');"
                "o.addEdge('knows', s, 'date', '20160110', 'price', 700);"
                "o.addEdge('knows', h, 'date', '20130220', 'price', 234);"
                "o.addEdge('created', p, 'date', '20171210', 'city', 'Shanghai');"
                "h.addEdge('created', e, 'date', '20151010', 'city', 'Beijing');"
                "h.addEdge('created', p, 'date', '20171210', 'city', 'Beijing');"
                "r.addEdge('created', p, 'date', '20171210', 'city', 'Beijing');"
                "li.addEdge('knows', wang, 'date', '20160110', 'price', 450)",
}

